using StaticArrays
using BenchmarkTools: @btime

include("fastpolys.jl")
using FastPolys

const PA2= @SMatrix [0 1 1 1 1 1 1 0 0 0 ; 0 0 1 1 1 0 0 1 1 0 ; 0 0 0 1 0 1 0 1 0 1 ; 0 0 0 0 0 0 1 0 1 1 ; 0 0 0 0 0 1 1 1 1 0 ; 0 0 0 0 0 0 1 1 0 1 ; 0 0 0 0 0 0 0 0 1 1 ; 0 0 0 0 0 0 0 0 1 1 ; 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 ]

const P4_1 = (1,1,1,2,1,1,1,2,2,3,4,3,4,2,3,4,5,5,6,7,)
const P4_2 = (2,2,3,3,5,5,6,5,5,6,7,6,7,8,8,9,6,8,8,9,)
const P4_3 = (4,3,4,4,7,6,7,9,8,10,10,8,9,9,10,10,7,9,10,10,)
const P6_1 = (1,1,1,1,1,1,1,1,1,2,2,2,1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,1,1,1,2,2,3,3,2,2,1,1,1,4,3,2,4,3,4,3,2,2,1,1,1,)
const P6_2 = (2,2,2,2,3,3,2,2,3,3,3,3,5,5,5,5,6,6,5,5,6,7,6,7,5,5,6,6,5,5,7,6,7,6,5,5,4,3,2,4,3,4,4,3,4,2,3,4,5,5,5,5,5,6,7,6,7,5,6,7,)
const P6_3 = (3,4,3,4,4,4,3,4,4,4,4,4,6,7,6,7,7,7,8,9,8,8,9,8,7,6,7,7,6,7,8,8,8,9,8,9,5,5,6,5,5,6,7,6,7,8,8,9,6,6,6,8,8,8,9,8,9,8,8,9,)
const P6_4 = (10,10,9,8,9,8,7,6,5,7,6,5,10,10,9,8,9,8,10,10,9,9,10,10,8,9,8,9,10,10,9,9,10,10,10,10,6,7,7,8,9,8,9,10,10,9,10,10,7,7,7,9,9,10,10,10,10,9,10,10,)
const P8_1 = (1,1,1,1,1,1,1,1,1,2,2,3,4,3,4,2,3,4,1,1,1,2,2,2,2,3,3,1,1,1,)
const P8_2 = (2,2,2,2,2,2,5,5,5,5,5,5,5,6,6,5,6,7,3,4,2,3,4,3,4,4,4,2,3,4,)
const P8_3 = (3,3,3,3,3,3,6,6,6,6,7,6,7,7,7,8,8,8,5,5,5,5,5,6,7,6,7,5,6,7,)
const P8_4 = (4,4,4,4,4,4,7,7,7,8,8,8,9,8,9,9,9,9,6,6,6,8,8,8,9,8,9,8,8,9,)
const P8_5 = (8,9,10,6,7,5,8,9,10,9,9,10,10,10,10,10,10,10,7,7,7,9,9,10,10,10,10,9,10,10,)

const P4 = Val((P4_1, P4_2, P4_3))
const P6 = Val((P6_1, P6_2, P6_3, P6_4))
const P8 = Val((P8_1, P8_2, P8_3, P8_4, P8_5))

const SUM10 = Val(((1,2,3,4,5,6,7,8,9,10),))

const ISA1  = @SMatrix [0 1 1 1 1 1 1 0 0 0 ; 1 0 1 1 1 0 0 1 1 0 ; 1 1 0 1 0 1 0 1 0 1 ; 1 1 1 0 0 0 1 0 1 1 ; 1 1 0 0 0 1 1 1 1 0 ; 1 0 1 0 1 0 1 1 0 1 ; 1 0 0 1 1 1 0 0 1 1 ; 0 1 1 0 1 1 0 0 1 1 ; 0 1 0 1 1 0 1 1 0 1 ; 0 0 1 1 0 1 1 1 1 0 ]
const ISA3  = @SMatrix [0 1 1 1 1 1 1 0 0 0 ; 1 0 1 1 1 0 0 1 1 0 ; 1 1 0 1 0 1 0 1 0 1 ; 1 1 1 0 0 0 1 0 1 1 ; 1 1 0 0 0 1 1 1 1 0 ; 1 0 1 0 1 0 1 1 0 1 ; 1 0 0 1 1 1 0 0 1 1 ; 0 1 1 0 1 1 0 0 1 1 ; 0 1 0 1 1 0 1 1 0 1 ; 0 0 1 1 0 1 1 1 1 0 ]
const ISA4  = @SMatrix [0 1 1 1 1 1 1 0 0 0 ; 0 0 1 1 1 0 0 1 1 0 ; 0 0 0 1 0 1 0 1 0 1 ; 0 0 0 0 0 0 1 0 1 1 ; 0 0 0 0 0 1 1 1 1 0 ; 0 0 0 0 0 0 1 1 0 1 ; 0 0 0 0 0 0 0 0 1 1 ; 0 0 0 0 0 0 0 0 1 1 ; 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 ]
const ISA8  = @SMatrix [0 1 1 1 1 1 1 0 0 0 ; 1 0 1 1 1 0 0 1 1 0 ; 1 1 0 1 0 1 0 1 0 1 ; 1 1 1 0 0 0 1 0 1 1 ; 1 1 0 0 0 1 1 1 1 0 ; 1 0 1 0 1 0 1 1 0 1 ; 1 0 0 1 1 1 0 0 1 1 ; 0 1 1 0 1 1 0 0 1 1 ; 0 1 0 1 1 0 1 1 0 1 ; 0 0 1 1 0 1 1 1 1 0 ]
const ISA9  = @SMatrix [0 1 1 1 1 1 1 0 0 0 ; 1 0 1 1 1 0 0 1 1 0 ; 1 1 0 1 0 1 0 1 0 1 ; 1 1 1 0 0 0 1 0 1 1 ; 1 1 0 0 0 1 1 1 1 0 ; 1 0 1 0 1 0 1 1 0 1 ; 1 0 0 1 1 1 0 0 1 1 ; 0 1 1 0 1 1 0 0 1 1 ; 0 1 0 1 1 0 1 1 0 1 ; 0 0 1 1 0 1 1 1 1 0 ]
const ISA16 = @SMatrix [0 1 1 1 1 1 1 0 0 0 ; 1 0 1 1 1 0 0 1 1 0 ; 1 1 0 1 0 1 0 1 0 1 ; 1 1 1 0 0 0 1 0 1 1 ; 1 1 0 0 0 1 1 1 1 0 ; 1 0 1 0 1 0 1 1 0 1 ; 1 0 0 1 1 1 0 0 1 1 ; 0 1 1 0 1 1 0 0 1 1 ; 0 1 0 1 1 0 1 1 0 1 ; 0 0 1 1 0 1 1 1 1 0 ]
const ISA17 = @SMatrix [0 1 1 1 1 1 1 0 0 0 ; 1 0 1 1 1 0 0 1 1 0 ; 1 1 0 1 0 1 0 1 0 1 ; 1 1 1 0 0 0 1 0 1 1 ; 1 1 0 0 0 1 1 1 1 0 ; 1 0 1 0 1 0 1 1 0 1 ; 1 0 0 1 1 1 0 0 1 1 ; 0 1 1 0 1 1 0 0 1 1 ; 0 1 0 1 1 0 1 1 0 1 ; 0 0 1 1 0 1 1 1 1 0 ]
const ISA18 = @SMatrix [0 1 1 1 1 1 1 0 0 0 ; 0 0 1 1 1 0 0 1 1 0 ; 0 0 0 1 0 1 0 1 0 1 ; 0 0 0 0 0 0 1 0 1 1 ; 0 0 0 0 0 1 1 1 1 0 ; 0 0 0 0 0 0 1 1 0 1 ; 0 0 0 0 0 0 0 0 1 1 ; 0 0 0 0 0 0 0 0 1 1 ; 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 ]

IS2_1  = (1,1,1,2,2,3,5,5,6,8,)
IS2_2  = (2,3,4,3,4,4,6,7,7,9,)
IS2_3  = (5,6,7,8,9,10,8,9,10,10,)
IS5_1  = (1,1,1,2,3,4,2,2,3,4,3,4,5,6,7,8,9,10,5,5,6,7,6,7,8,9,10,8,9,10,)
IS5_2  = (2,3,4,1,1,1,3,4,2,2,4,3,1,1,1,2,2,3,6,7,5,5,7,6,5,5,6,9,8,8,)
IS5_3  = (5,6,7,5,6,7,8,9,8,9,10,10,2,3,4,3,4,4,8,9,8,9,10,10,6,7,7,10,10,9,)
IS6_1  = (1,1,1,2,2,3,4,3,4,2,3,4,1,1,1,2,2,3,4,3,4,2,3,4,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,5,6,7,5,6,7,8,9,8,9,10,10,)
IS6_2  = (2,2,3,1,1,1,1,1,1,3,2,2,5,5,6,5,5,6,7,6,7,8,8,9,1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,6,5,5,8,8,9,5,5,6,7,6,7,)
IS6_3  = (3,4,4,3,4,2,2,4,3,4,4,3,6,7,7,8,9,8,9,10,10,9,10,10,6,7,5,5,7,6,8,9,8,9,10,10,5,5,6,7,6,7,9,8,10,10,8,9,7,7,6,9,10,10,9,8,10,10,8,9,)
IS7_1  = (1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,5,5,6,7,6,7,8,9,8,9,10,10,)
IS7_2  = (3,4,2,2,4,3,3,4,2,2,4,3,1,1,1,1,1,1,4,3,4,3,2,2,2,2,3,4,3,4,1,1,1,1,1,1,3,4,2,2,4,3,3,4,2,2,4,3,7,6,7,6,5,5,6,7,5,5,7,6,)
IS7_3  = (5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,6,7,5,5,7,6,8,9,8,9,10,10,5,5,6,7,6,7,9,8,10,10,8,9,8,9,8,9,10,10,9,8,10,10,8,9,)
IS10_1 = (1,1,1,2,3,4,2,2,3,4,3,4,5,6,7,8,9,10,5,5,6,7,6,7,8,9,10,8,9,10,)
IS10_2 = (2,3,4,1,1,1,3,4,2,2,4,3,1,1,1,2,2,3,6,7,5,5,7,6,5,5,6,9,8,8,)
IS10_3 = (5,6,7,5,6,7,8,9,8,9,10,10,2,3,4,3,4,4,8,9,8,9,10,10,6,7,7,10,10,9,)
IS11_1 = (1,1,1,2,2,3,1,1,1,2,3,4,2,2,3,4,3,4,5,5,6,5,5,6,7,6,7,8,8,9,)
IS11_2 = (2,3,4,3,4,4,5,6,7,5,6,7,8,9,8,9,10,10,6,7,7,8,9,8,9,10,10,9,10,10,)
IS11_3 = (5,6,7,8,9,10,2,3,4,1,1,1,3,4,2,2,4,3,8,9,10,6,7,5,5,7,6,10,9,8,)
IS12_1 = (1,1,1,2,2,3,4,3,4,2,3,4,1,1,1,2,2,3,4,3,4,2,3,4,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,5,6,7,5,6,7,8,9,8,9,10,10,)
IS12_2 = (2,2,3,1,1,1,1,1,1,3,2,2,5,5,6,5,5,6,7,6,7,8,8,9,1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,6,5,5,8,8,9,5,5,6,7,6,7,)
IS12_3 = (3,4,4,3,4,2,2,4,3,4,4,3,6,7,7,8,9,8,9,10,10,9,10,10,6,7,5,5,7,6,8,9,8,9,10,10,5,5,6,7,6,7,9,8,10,10,8,9,7,7,6,9,10,10,9,8,10,10,8,9,)
IS13_1 = (1,1,1,1,1,1,2,2,3,2,2,3,1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,5,5,6,5,5,6,7,6,7,8,8,9,5,5,6,5,5,6,7,6,7,8,8,9,)
IS13_2 = (2,2,3,4,3,4,3,4,4,3,4,4,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,6,7,7,8,9,8,9,10,10,9,10,10,6,7,7,8,9,8,9,10,10,9,10,10,)
IS13_3 = (3,4,2,2,4,3,1,1,1,4,3,2,6,7,5,5,7,6,8,9,8,9,10,10,5,5,6,7,6,7,9,8,10,10,8,9,1,1,1,2,2,3,4,3,4,2,3,4,7,6,5,9,8,10,10,8,9,5,6,7,)
IS14_1 = (1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,5,5,6,7,6,7,8,9,8,9,10,10,)
IS14_2 = (3,4,2,2,4,3,3,4,2,2,4,3,1,1,1,1,1,1,4,3,4,3,2,2,2,2,3,4,3,4,1,1,1,1,1,1,3,4,2,2,4,3,3,4,2,2,4,3,7,6,7,6,5,5,6,7,5,5,7,6,)
IS14_3 = (5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,6,7,5,5,7,6,8,9,8,9,10,10,5,5,6,7,6,7,9,8,10,10,8,9,8,9,8,9,10,10,9,8,10,10,8,9,)
IS15_1 = (1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,3,3,2,2,2,2,3,3,2,2,3,4,3,4,1,1,1,1,1,1,3,4,2,2,4,3,3,4,2,2,4,3,5,5,6,7,6,7,5,5,5,5,6,6,6,7,5,5,7,6,8,9,8,8,9,8,5,5,6,7,6,7,5,5,5,5,6,6,6,7,5,5,7,6,8,9,8,8,9,8,)
IS15_2 = (5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,2,2,3,4,3,4,2,2,3,4,3,4,3,4,3,4,4,4,3,4,3,4,4,4,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,8,9,8,9,10,10,6,7,6,7,7,7,8,9,8,9,10,10,10,10,9,9,10,10,8,9,8,9,10,10,6,7,6,7,7,7,8,9,8,9,10,10,10,10,9,9,10,10,)
IS15_3 = (3,4,2,2,4,3,3,4,2,2,4,3,1,1,1,1,1,1,4,3,4,3,2,2,6,7,5,5,7,6,8,9,8,9,10,10,5,5,6,7,6,7,9,8,10,10,8,9,6,7,5,5,7,6,8,9,8,9,10,10,5,5,6,7,6,7,9,8,10,10,8,9,1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,7,6,7,6,5,5,9,8,10,10,8,9,9,8,10,10,8,9,5,5,6,7,6,7,)
IS19_1 = (1,1,1,2,3,4,2,2,3,4,3,4,5,6,7,8,9,10,5,5,6,7,6,7,8,9,10,8,9,10,)
IS19_2 = (2,3,4,1,1,1,3,4,2,2,4,3,1,1,1,2,2,3,6,7,5,5,7,6,5,5,6,9,8,8,)
IS19_3 = (5,6,7,5,6,7,8,9,8,9,10,10,2,3,4,3,4,4,8,9,8,9,10,10,6,7,7,10,10,9,)
IS20_1 = (1,1,1,2,3,4,2,2,3,4,3,4,1,1,1,2,3,4,2,2,3,4,3,4,5,6,7,5,6,7,8,9,8,9,10,10,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,)
IS20_2 = (2,3,4,1,1,1,3,4,2,2,4,3,5,6,7,5,6,7,8,9,8,9,10,10,1,1,1,2,3,4,2,2,3,4,3,4,6,7,5,5,7,6,8,9,8,9,10,10,5,5,6,7,6,7,9,8,10,10,8,9,)
IS20_3 = (5,6,7,5,6,7,8,9,8,9,10,10,2,3,4,1,1,1,3,4,2,2,4,3,2,3,4,1,1,1,3,4,2,2,4,3,8,9,8,9,10,10,6,7,5,5,7,6,6,7,5,5,7,6,10,10,9,8,9,8,)
IS21_1 = (1,1,1,2,2,3,5,5,6,8,)
IS21_2 = (2,3,4,3,4,4,6,7,7,9,)
IS21_3 = (5,6,7,8,9,10,8,9,10,10,)
IS22_1 = (1,1,1,2,2,3,4,3,4,2,3,4,1,1,1,2,2,3,4,3,4,2,3,4,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,5,6,7,5,6,7,8,9,8,9,10,10,)
IS22_2 = (2,2,3,1,1,1,1,1,1,3,2,2,5,5,6,5,5,6,7,6,7,8,8,9,1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,6,5,5,8,8,9,5,5,6,7,6,7,)
IS22_3 = (3,4,4,3,4,2,2,4,3,4,4,3,6,7,7,8,9,8,9,10,10,9,10,10,6,7,5,5,7,6,8,9,8,9,10,10,5,5,6,7,6,7,9,8,10,10,8,9,7,7,6,9,10,10,9,8,10,10,8,9,)
IS23_1 = (1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,)
IS23_2 = (2,2,3,4,3,4,1,1,1,1,1,1,3,4,2,2,4,3,3,4,2,2,4,3,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,6,7,5,5,7,6,8,9,8,9,10,10,5,5,6,7,6,7,9,8,10,10,8,9,6,7,5,5,7,6,8,9,8,9,10,10,5,5,6,7,6,7,9,8,10,10,8,9,)
IS23_3 = (3,4,2,2,4,3,3,4,2,2,4,3,1,1,1,1,1,1,4,3,4,3,2,2,6,7,5,5,7,6,8,9,8,9,10,10,5,5,6,7,6,7,9,8,10,10,8,9,6,7,5,5,7,6,8,9,8,9,10,10,5,5,6,7,6,7,9,8,10,10,8,9,1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,7,6,7,6,5,5,9,8,10,10,8,9,9,8,10,10,8,9,5,5,6,7,6,7,)
IS24_1 = (1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,5,5,6,7,6,7,8,9,8,9,10,10,)
IS24_2 = (3,4,2,2,4,3,3,4,2,2,4,3,1,1,1,1,1,1,4,3,4,3,2,2,2,2,3,4,3,4,1,1,1,1,1,1,3,4,2,2,4,3,3,4,2,2,4,3,7,6,7,6,5,5,6,7,5,5,7,6,)
IS24_3 = (5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,6,7,5,5,7,6,8,9,8,9,10,10,5,5,6,7,6,7,9,8,10,10,8,9,8,9,8,9,10,10,9,8,10,10,8,9,)
IS25_1 = (1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,)
IS25_2 = (2,2,2,2,3,3,1,1,1,1,1,1,1,1,1,1,1,1,3,3,2,2,2,2,2,2,3,4,3,4,1,1,1,1,1,1,3,4,2,2,4,3,3,4,2,2,4,3,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,3,3,2,2,2,2,3,3,1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,6,6,5,5,5,5,6,7,5,5,7,6,5,5,5,5,6,6,5,5,6,7,6,7,)
IS25_3 = (3,4,3,4,4,4,3,4,2,2,4,3,3,4,2,2,4,3,4,4,4,3,4,3,5,5,5,5,6,6,5,5,6,7,6,7,5,5,6,7,6,7,8,8,8,9,8,9,2,2,3,4,3,4,2,2,3,4,3,4,3,4,3,4,4,4,3,4,3,4,4,4,6,7,5,5,7,6,6,7,5,5,7,6,5,5,5,5,6,6,9,8,9,8,8,8,7,7,7,6,7,6,8,8,8,9,8,9,6,7,6,7,7,7,9,8,9,8,8,8,)
IS25_4 = (5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,6,7,6,7,7,7,8,9,8,9,10,10,8,9,8,9,10,10,9,9,10,10,10,10,6,7,5,5,7,6,8,9,8,9,10,10,5,5,6,7,6,7,9,8,10,10,8,9,8,9,8,9,10,10,8,9,8,9,10,10,6,7,6,7,7,7,10,10,10,10,9,9,8,9,8,9,10,10,9,9,10,10,10,10,9,8,10,10,8,9,10,10,10,10,9,9,)
IS26_1 = (1,1,1,1,1,1,2,2,3,2,2,3,1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,5,5,6,5,5,6,7,6,7,8,8,9,5,5,6,5,5,6,7,6,7,8,8,9,)
IS26_2 = (2,2,3,4,3,4,3,4,4,3,4,4,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,6,7,7,8,9,8,9,10,10,9,10,10,6,7,7,8,9,8,9,10,10,9,10,10,)
IS26_3 = (3,4,2,2,4,3,1,1,1,4,3,2,2,2,3,4,3,4,1,1,1,1,1,1,3,4,2,2,4,3,3,4,2,2,4,3,1,1,1,2,2,3,4,3,4,2,3,4,7,6,5,6,7,5,5,7,6,5,6,7,)
IS26_4 = (5,5,6,7,6,7,8,9,10,8,9,10,6,7,5,5,7,6,8,9,8,9,10,10,5,5,6,7,6,7,9,8,10,10,8,9,8,9,10,6,7,5,5,7,6,10,9,8,8,9,10,9,8,10,10,8,9,10,9,8,)
IS27_1 = (1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,)
IS27_2 = (5,5,6,7,6,7,5,5,6,7,6,7,8,9,8,9,10,10,8,9,8,9,10,10,2,2,3,4,3,4,1,1,1,1,1,1,3,4,2,2,4,3,3,4,2,2,4,3,2,2,3,4,3,4,1,1,1,1,1,1,3,4,2,2,4,3,3,4,2,2,4,3,8,9,8,9,10,10,6,7,5,5,7,6,6,7,5,5,7,6,10,10,9,8,9,8,8,9,8,9,10,10,6,7,5,5,7,6,6,7,5,5,7,6,10,10,9,8,9,8,)
IS27_3 = (3,4,2,2,4,3,3,4,2,2,4,3,1,1,1,1,1,1,4,3,4,3,2,2,6,7,5,5,7,6,8,9,8,9,10,10,5,5,6,7,6,7,9,8,10,10,8,9,6,7,5,5,7,6,8,9,8,9,10,10,5,5,6,7,6,7,9,8,10,10,8,9,1,1,1,1,1,1,2,2,3,4,3,4,2,2,3,4,3,4,2,2,3,4,3,4,7,6,7,6,5,5,9,8,10,10,8,9,9,8,10,10,8,9,5,5,6,7,6,7,)

const IS2  = Val((IS2_1,  IS2_2,  IS2_3))
const IS5  = Val((IS5_1,  IS5_2,  IS5_3))
const IS6  = Val((IS6_1,  IS6_2,  IS6_3))
const IS7  = Val((IS7_1,  IS7_2,  IS7_3))
const IS10 = Val((IS10_1, IS10_2, IS10_3))
const IS11 = Val((IS11_1, IS11_2, IS11_3))
const IS12 = Val((IS12_1, IS12_2, IS12_3))
const IS13 = Val((IS13_1, IS13_2, IS13_3))
const IS14 = Val((IS14_1, IS14_2, IS14_3))
const IS15 = Val((IS15_1, IS15_2, IS15_3))
const IS19 = Val((IS19_1, IS19_2, IS19_3))
const IS20 = Val((IS20_1, IS20_2, IS20_3))
const IS21 = Val((IS21_1, IS21_2, IS21_3))
const IS22 = Val((IS22_1, IS22_2, IS22_3))
const IS23 = Val((IS23_1, IS23_2, IS23_3))
const IS24 = Val((IS24_1, IS24_2, IS24_3))
const IS25 = Val((IS25_1, IS25_2, IS25_3, IS25_4))
const IS26 = Val((IS26_1, IS26_2, IS26_3, IS26_4))
const IS27 = Val((IS27_1, IS27_2, IS27_3))


function invariants(x1::SVector{10, T}) where {T}
    x2 = x1.*x1
    x3 = x2.*x1
    x4 = x3.*x1
    x5 = x4.*x1
    x6 = x5.*x1

    #------------------------------------------------
    # Primaries
    #------------------------------------------------

    P1 = fpoly((x1,), Main.SUM10)
    P2 = dot(x1, PA2 * x1)
    P3 = fpoly((x2,), Main.SUM10)
    P4 = fpoly((x1, x1, x1), Main.P4)
    P5 = fpoly((x3,), Main.SUM10)
    P6 = fpoly((x1, x1, x1, x1), Main.P6)
    P7 = fpoly((x4,), Main.SUM10)
    P8 = fpoly((x1, x1, x1, x1, x1), Main.P8)
    P9 = fpoly((x5,), Main.SUM10)
    P10 = fpoly((x6,), Main.SUM10)

    #------------------------------------------------
    # Secondaries
    #------------------------------------------------
    # Irreducible secondaries for NBody=5and deg=6

    IS1  = dot(x2, ISA1 * x1)
    IS3  = dot(x3, ISA3 * x1)
    IS4  = dot(x2, ISA4 * x2)
    IS8  = dot(x4, ISA8 * x1)
    IS9  = dot(x3, ISA9 * x2)
    IS16 = dot(x5, ISA16 * x1)
    IS17 = dot(x4, ISA17 * x2)
    IS18 = dot(x3, ISA18 * x3)
    IS2  = fpoly((x1, x1, x1), Main.IS2)
    IS5  = fpoly((x2, x1, x1), Main.IS5)
    IS6  = fpoly((x2, x1, x1), Main.IS6)
    IS7  = fpoly((x2, x1, x1), Main.IS7)
    IS10 = fpoly((x3, x1, x1), Main.IS10)
    IS11 = fpoly((x2, x2, x1), Main.IS11)
    IS12 = fpoly((x3, x1, x1), Main.IS12)
    IS13 = fpoly((x2, x2, x1), Main.IS13)
    IS14 = fpoly((x3, x1, x1), Main.IS14)
    IS15 = fpoly((x2, x2, x1), Main.IS15)
    IS19 = fpoly((x4, x1, x1), Main.IS19)
    IS20 = fpoly((x3, x2, x1), Main.IS20)
    IS21 = fpoly((x2, x2, x2), Main.IS21)
    IS22 = fpoly((x4, x1, x1), Main.IS22)
    IS23 = fpoly((x3, x2, x1), Main.IS23)
    IS24 = fpoly((x4, x1, x1), Main.IS24)
    IS27 = fpoly((x3, x2, x1), Main.IS27)
    IS25 = fpoly((x3, x1, x1, x1), Main.IS25)
    IS26 = fpoly((x2, x2, x1, x1), Main.IS26)

    return (@SVector [P1, P2, P3, P4, P5, P6, P7, P8, P9, P10]),
        (@SVector [IS1, IS2, IS3, IS4, IS5, IS6, IS7, IS8, IS9, IS10, IS11, IS12, IS13, IS14, IS15, IS16, IS17, IS18, IS19, IS20, IS21, IS22, IS23, IS24, IS25, IS26])
end

function invariants_d(x1::SVector{10, T}) where {T}
    x2 = x1.*x1
    x3 = x2.*x1
    x4 = x3.*x1
    x5 = x4.*x1
    x6 = x5.*x1
    dx1 = @SVector ones(10)
    dx2 = 2 * x1
    dx3 = 3 * x2
    dx4 = 4 * x3
    dx5 = 5 * x4
    dx6 = 6 * x5

    dP1 = fpoly_d((x1,),(dx1,), SUM10)
    dP2 = 2 * PA2 * x1
    dP3 = fpoly_d((x2,),(dx2,), SUM10)
    dP4 = fpoly_d((x1, x1, x1),(dx1,dx1,dx1), Main.P4)
    dP5 = fpoly_d((x3,),(dx3,), SUM10)
    dP6 = fpoly_d((x1, x1, x1, x1), (dx1, dx1, dx1, dx1), Main.P6)
    dP7 = fpoly_d((x4,),(dx4,), SUM10)
    dP8 = fpoly_d((x1, x1, x1, x1, x1), (dx1, dx1, dx1, dx1, dx1), Main.P8)
    dP9 = fpoly_d((x5,),(dx5,), SUM10)
    dP10 = fpoly_d((x6,),(dx6,), SUM10)

    dIS1  = dx2 .* (ISA1 * x1) + dx1 .* (ISA1 * x2)
    dIS3  = dx3 .* (ISA3 * x1) + dx1 .* (ISA3 * x3)
    dIS4  = dx2 .* (ISA4 * x2) + dx2 .* (ISA4 * x2)
    dIS8  = dx4 .* (ISA8 * x1) + dx1 .* (ISA8 * x4)
    dIS9  = dx3 .* (ISA9 * x2) + dx2 .* (ISA9 * x3)
    dIS16 = dx5 .* (ISA16 * x1) + dx1 .* (ISA16 * x5)
    dIS17 = dx4 .* (ISA17 * x2) + dx2 .* (ISA17 * x4)
    dIS18 = dx3 .* (ISA18 * x3) + dx3 .* (ISA18 * x3)
    dIS2  = fpoly_d((x1, x1, x1), (dx1, dx1, dx1), Main.IS2)
    dIS5  = fpoly_d((x2, x1, x1), (dx2, dx1, dx1), Main.IS5)
    dIS6  = fpoly_d((x2, x1, x1), (dx2, dx1, dx1), Main.IS6)
    dIS7  = fpoly_d((x2, x1, x1), (dx2, dx1, dx1), Main.IS7)
    dIS10 = fpoly_d((x3, x1, x1), (dx3, dx1, dx1), Main.IS10)
    dIS11 = fpoly_d((x2, x2, x1), (dx2, dx2, dx1), Main.IS11)
    dIS12 = fpoly_d((x3, x1, x1), (dx3, dx1, dx1), Main.IS12)
    dIS13 = fpoly_d((x2, x2, x1), (dx2, dx2, dx1), Main.IS13)
    dIS14 = fpoly_d((x3, x1, x1), (dx3, dx1, dx1), Main.IS14)
    dIS15 = fpoly_d((x2, x2, x1), (dx2, dx2, dx1), Main.IS15)
    dIS19 = fpoly_d((x4, x1, x1), (dx4, dx1, dx1), Main.IS19)
    dIS20 = fpoly_d((x3, x2, x1), (dx3, dx2, dx1), Main.IS20)
    dIS21 = fpoly_d((x2, x2, x2), (dx2, dx2, dx2), Main.IS21)
    dIS22 = fpoly_d((x4, x1, x1), (dx4, dx1, dx1), Main.IS22)
    dIS23 = fpoly_d((x3, x2, x1), (dx3, dx2, dx1), Main.IS23)
    dIS24 = fpoly_d((x4, x1, x1), (dx4, dx1, dx1), Main.IS24)
    dIS27 = fpoly_d((x3, x2, x1), (dx3, dx2, dx1), Main.IS27)
    dIS25 = fpoly_d((x3, x1, x1, x1), (dx3, dx1, dx1, dx1), Main.IS25)
    dIS26 = fpoly_d((x2, x2, x1, x1), (dx2, dx2, dx1, dx1), Main.IS26)

    return (dP1, dP2, dP3, dP4, dP5, dP6, dP7, dP8, dP9, dP10),
        (dIS1, dIS2, dIS3, dIS4, dIS5, dIS6, dIS7, dIS8, dIS9, dIS10,dIS11, dIS12, dIS13, dIS14, dIS15, dIS16, dIS17, dIS18, dIS19, dIS20, dIS21, dIS22, dIS23, dIS24, dIS25, dIS26)
end


x = @SVector rand(10)
@btime invariants($x)
@btime invariants_d($x)
